import{_ as a,c as s,o as n,O as e}from"./chunks/framework.4130ee97.js";const D=JSON.parse('{"title":"指引","description":"","frontmatter":{},"headers":[],"relativePath":"data/index.md","lastUpdated":1682347130000}'),o={name:"data/index.md"},l=e(`<h1 id="指引" tabindex="-1">指引 <a class="header-anchor" href="#指引" aria-label="Permalink to &quot;指引&quot;">​</a></h1><p>使用 VitePress v4.2.1 搭建的静态网站。</p><h2 id="编写" tabindex="-1">编写 <a class="header-anchor" href="#编写" aria-label="Permalink to &quot;编写&quot;">​</a></h2><p>VitePress 带有内置的 Markdown 扩展。</p><h3 id="头部锚点" tabindex="-1">头部锚点 <a class="header-anchor" href="#头部锚点" aria-label="Permalink to &quot;头部锚点&quot;">​</a></h3><p>头部会自动获取锚点链接。可以通过 <code>markdown.anchor</code> 选项配置锚点的渲染。</p><h3 id="内部链接" tabindex="-1">内部链接<a href="https://process1024.github.io/vitepress/guide/markdown#%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" target="_blank" rel="noreferrer">#</a> <a class="header-anchor" href="#内部链接" aria-label="Permalink to &quot;内部链接[#](https://process1024.github.io/vitepress/guide/markdown#%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5)&quot;">​</a></h3><p>内部链接转换为 SPA 导航的路由链接。 此外，每个子目录中包含的每个 <code>index.md</code> 都会自动转换为 <code>index.html</code>，并带有相应的URL <code>/</code>。</p><p>举个例子，现在有以下目录结构：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ foo</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ one.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ two.md</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ bar</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ three.md</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ four.md</span></span></code></pre></div><p>在 <code>foo/one.md</code>中:</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Home</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">/</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 点击跳转到 根目录的 index.md --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">/foo/</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 点击跳转到 foo 目录的 index.html --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">foo heading</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">./#heading</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 锚点会定位到 foo 的 heading 标题 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">bar - three</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../bar/three</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 你可以不写后缀名 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">bar - three</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../bar/three.md</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 也可以加 .md --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">bar - four</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../bar/four.html</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &lt;!-- 或者加 .html --&gt;</span></span></code></pre></div><h3 id="外部链接" tabindex="-1">外部链接 <a class="header-anchor" href="#外部链接" aria-label="Permalink to &quot;外部链接&quot;">​</a></h3><p>外部的链接会自动识别并生成 <code>target=&quot;_blank&quot; rel=&quot;noreferrer&quot;</code> 的链接。</p><h3 id="emoji" tabindex="-1">Emoji <a class="header-anchor" href="#emoji" aria-label="Permalink to &quot;Emoji&quot;">​</a></h3><p><strong>输入</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:tada: :100:</span></span></code></pre></div><p><strong>输出</strong></p><p>🎉 💯</p><p>可用的emoji可以通过<a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.json" target="_blank" rel="noreferrer">这里</a>了解</p><h3 id="生成目录" tabindex="-1">生成目录 <a class="header-anchor" href="#生成目录" aria-label="Permalink to &quot;生成目录&quot;">​</a></h3><p><strong>输入</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[[toc]]</span></span></code></pre></div><p>可以使用 <code>markdown.toc</code> 选项配置 TOC 的渲染。</p><h3 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This is an info box.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is a tip.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This is a warning.</p></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>This is a dangerous warning.</p></div><details class="details custom-block"><summary>Details</summary><p>This is a details block.</p></details><p>可以通过在容器的“类型”后面添加文本来设置自定义标题。</p>`,31),t=[l];function p(r,c,i,d,h,m){return n(),s("div",null,t)}const y=a(o,[["render",p]]);export{D as __pageData,y as default};
